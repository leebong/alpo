<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.green.SpringTest.dao.BoardMapper">
  <insert id="setBoard">
    insert into board (title,contents, author) 
    values (#{title}, #{contents},#{author})
  </insert>
  <select id="getBoards" resultType="kr.green.SpringTest.dao.Board">
  	select * from board
  </select>
  <select id="getBoardById" resultType="kr.green.SpringTest.dao.Board">
  	select * from board where number = #{number}
  </select>
  
  <update id="modifyBoardById">
    update board set title = #{title}, contents = #{contents}
    where number = #{number}
  </update>
  
  <select id = "getPageBoards" resultType="kr.green.SpringTest.dao.Board">
  	select * from board order by number desc limit #{pageStart}, #{perPageNum} 
  	<!-- pageStart는 Page.java에서 메서드의 getpageStart를 찾아온다. 
  	즉 getter를 찾아온다
  	limit A(시작번지), B(불러올갯수)
  	order by number desc 로 최신 글부터 표시하도록 한다 -->
  </select>
  
  <select id="getBoardsCount" resultType = "java.lang.Integer">
  	select count(number) from board
  </select>
  
  <!-- 검색 -->
  <select id = "getPageBoardsByTitle" resultType="kr.green.SpringTest.dao.Board">
  	select * from board where  title like #{search} order by number desc limit #{p.pageStart}, #{p.perPageNum}
  </select>
  <select id = "getBoardsCountByTitle" resultType = "java.lang.Integer">
  	select count(number) from board where title like #{search}
  </select>
  
  <!-- List별 검색조건 -->
  <!-- 2가지 방법
  	1. BoardMapper.xm.에 if태그를 이용하여 sql문을 동적으로 처리하는 방법
  	2. 각 List별 검색조건명에 해당하는 sql문을 만들어서 controller에서 각sql문을 골라서 처리하는 방법
  		2.1 BoardMapper.java에서 메서드를 선어
  		2.2 BoardMapper.xml에서 sql문을 작성
  		2.3 BoardController.java에서 메서드를 적절히 호출 -->
  <select id = "getPageBoardsByContents" resultType="kr.green.SpringTest.dao.Board">
  	select * from board where  contents like #{search} order by number desc limit #{p.pageStart}, #{p.perPageNum}
  </select>
  <select id = "getBoardsCountByContents" resultType = "java.lang.Integer">
  	select count(number) from board where contents like #{search}
  </select>
  
  <select id = "getPageBoardsByAuthor" resultType="kr.green.SpringTest.dao.Board">
  	select * from board where  author like #{search} order by number desc limit #{p.pageStart}, #{p.perPageNum}
  </select>
  <select id = "getBoardsCountByAuthor" resultType = "java.lang.Integer">
  	select count(number) from board where author like #{search}
  </select>
  		
  
</mapper>